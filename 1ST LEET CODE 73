void setZeroes(int** matrix, int matrixSize, int* matrixColSize){
     int m=matrixSize;
    int n=*matrixColSize;
    if(m==1){
        int flag=0;
        for(int a=0;a<n;a++){
            if(matrix[0][a]==0){
                flag=1;
                break;
            }
        }
        if(flag==1){
          for(int i=0;i<n;i++){
              matrix[0][i]=0;
          }
        }
    }
    else if(n==1){
        int flag=0;
        for(int i=0;i<m;i++){
            if(matrix[i][0]==0){
                flag=1;
                break;
            }
        }
        if(flag==1){
            for(int i=0;i<m;i++){
                matrix[i][0]=0;
            }
        }
    }
    else{
        int z = INT_MAX + 2;
        int j;
    for(int i=0;i<m;i++){
        int p,q;
        for(j=0,p=0,q=n-1;;p++,q--,j++){
            if(p>q){
                break;
            }
         if(matrix[i][p]==0){
             int k=i;
           for(int x=0;x<n;x++){
               if(matrix[k][x]!=0)
                  matrix[k][x]=z;
           }
           int l = j;
           for(int y=0;y<m;y++){
               if(matrix[y][l]!=0)
                  matrix[y][l]=z;
           }
         }
           if(matrix[i][q]==0){
             int k=i;
           for(int x=n-1;x>=0;x--){
               if(matrix[k][x]!=0)
                  matrix[k][x]=z;
           }
           int l=n-1-j;
           for(int y=0;y<m;y++){
               if(matrix[y][l]!=0)
                  matrix[y][l]=z;
           }
         }
        }
    }
    for(int a=0;a<m;a++){
        for(int b=0;b<n;b++){
            if(matrix[a][b]==z){
                matrix[a][b] = 0;
            }
        }
    }
    }
}
